// src/screens/FeedbackScreen.js
import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  ScrollView,
  // SafeAreaView „ÇíÂâäÈô§
  TouchableOpacity,
} from 'react-native';
import { SafeAreaView } from 'react-native-safe-area-context';  // ËøΩÂä†
import { useAuth } from '../contexts/AuthContext';

export default function FeedbackScreen({ navigation, route }) {
  const { scene, answers } = route.params || {};
  const { user, isGuest, logout } = useAuth();

  // ‰ªÆ„ÅÆ„Éï„Ç£„Éº„Éâ„Éê„ÉÉ„ÇØ„Éá„Éº„ÇøÔºàÂæå„ÅßAI„ÅåÁîüÊàêÔºâ
  const feedback = {
    summary: 'ÂÖ®‰ΩìÁöÑ„Å´ÂÖ∑‰ΩìÁöÑ„Å™Ë™¨Êòé„Åå„Åß„Åç„Å¶„Åä„Çä„ÄÅËâØ„ÅÑÂ†±Âëä„Åß„Åó„Åü„ÄÇ„Åï„Çâ„Å´ÊîπÂñÑ„Åß„Åç„ÇãÁÇπ„ÇÇ„ÅÑ„Åè„Å§„Åã„ÅÇ„Çä„Åæ„Åô„ÄÇ',
    goodPoints: [
      {
        aspect: 'ÂÖ∑‰ΩìÊÄß',
        quote: 'EC„Çµ„Ç§„Éà„ÅÆÊ±∫Ê∏àÊ©üËÉΩ„ÇíÂÆüË£Ö‰∏≠',
        comment: '„Éó„É≠„Ç∏„Çß„ÇØ„ÉàÂêç„ÇíÊòéÁ¢∫„Å´Á§∫„Åó„Å¶„ÅÑ„Å¶ËâØ„ÅÑ',
      },
      {
        aspect: 'ÂïèÈ°åË™çË≠ò',
        quote: 'API„Ç®„É©„Éº„ÅßÈÅÖÂª∂',
        comment: 'Ë™≤È°å„ÇíÊòéÁ¢∫„Å´ÊääÊè°„Åß„Åç„Å¶„ÅÑ„Çã',
      },
    ],
    improvementPoints: [
      {
        aspect: 'Ë´ñÁêÜÊßãÈÄ†',
        original: 'ÈÅÖÂª∂„Åó„Å¶„ÅÑ„Åæ„Åô',
        improved: '‰∫àÂÆö„Çà„Çä3Êó•ÈÅÖÂª∂„Åó„Å¶„ÅÑ„Åæ„Åô„Åå„ÄÅÂÖ®‰Ωì„Çπ„Ç±„Ç∏„É•„Éº„É´„Å∏„ÅÆÂΩ±Èüø„ÅØÊúÄÂ∞èÈôê„Åß„Åô',
        reason: 'ÂΩ±ÈüøÁØÑÂõ≤„Åæ„Åß‰ºù„Åà„Çã„Å®ÂÆâÂøÉÊÑü„Çí‰∏é„Åà„Çâ„Çå„Åæ„Åô',
      },
      {
        aspect: 'Ëß£Ê±∫Á≠ñ„ÅÆÊèêÁ§∫',
        original: 'ÂØæÁ≠ñ„ÇíÊ§úË®é‰∏≠„Åß„Åô',
        improved: 'APIÊèê‰æõÂÖÉ„Å´Âïè„ÅÑÂêà„Çè„Åõ‰∏≠„Åß„ÄÅÊòéÊó•„Åæ„Åß„Å´ÂõûÁ≠î„ÇíÂæó„Çã‰∫àÂÆö„Åß„Åô',
        reason: 'ÂÖ∑‰ΩìÁöÑ„Å™„Ç¢„ÇØ„Ç∑„Éß„É≥„Å®ÊúüÈôê„ÇíÁ§∫„Åô„Å®‰ø°È†ºÊÑü„ÅåÂ¢ó„Åó„Åæ„Åô',
      },
    ],
    encouragement: 'Á¥†Êô¥„Çâ„Åó„ÅÑ„Çπ„Çø„Éº„Éà„Åß„ÅôÔºÅÁ∑¥Áøí„ÇíÈáç„Å≠„Çã„Åì„Å®„Åß„ÄÅ„Åï„Çâ„Å´Ë™¨ÂæóÂäõ„ÅÆ„ÅÇ„ÇãÂ†±Âëä„Åå„Åß„Åç„Çã„Çà„ÅÜ„Å´„Å™„Çä„Åæ„Åô„ÄÇ',
  };

  const handleSaveSession = () => {
    if (isGuest) {
      // „Ç≤„Çπ„Éà„É¢„Éº„Éâ„ÅÆÂ†¥Âêà„ÅØ„ÄÅ„É≠„Ç∞„Ç¢„Ç¶„Éà„Åó„Å¶Ë™çË®ºÁîªÈù¢„Å´Êàª„Çã
      // AppNavigator„ÅåËá™ÂãïÁöÑ„Å´AuthNavigator„Å´Âàá„ÇäÊõø„Çè„Çä„ÄÅSignupÁîªÈù¢„Å´Ë™òÂ∞é„Åß„Åç„Çã
      logout();
    } else {
      // „Çª„ÉÉ„Ç∑„Éß„É≥„Çí‰øùÂ≠òÔºàÂæå„ÅßÂÆüË£ÖÔºâ
      console.log('„Çª„ÉÉ„Ç∑„Éß„É≥„Çí‰øùÂ≠ò„Åó„Åæ„Åô');
      navigation.navigate('History');
    }
  };

  const handleRetry = () => {
    navigation.navigate('SceneSelection');
  };

  const handleBackToHome = () => {
    navigation.navigate('Home');
  };

  return (
    <SafeAreaView style={styles.container} edges={['top']}>
      <ScrollView showsVerticalScrollIndicator={false}>
        <View style={styles.header}>
          <Text style={styles.headerTitle}>„ÅäÁñ≤„ÇåÊßò„Åß„Åó„ÅüÔºÅ</Text>
          <Text style={styles.sceneIcon}>{scene?.icon || 'üìä'}</Text>
          <Text style={styles.sceneName}>{scene?.name || 'Á∑¥Áøí'}</Text>
        </View>

        <View style={styles.content}>
          {/* „Çµ„Éû„É™„Éº */}
          <View style={styles.summaryCard}>
            <Text style={styles.summaryLabel}>Á∑èË©ï</Text>
            <Text style={styles.summaryText}>{feedback.summary}</Text>
          </View>

          {/* ËâØ„Åã„Å£„ÅüÁÇπ */}
          <View style={styles.section}>
            <Text style={styles.sectionTitle}>‚úÖ ËâØ„Åã„Å£„ÅüÁÇπ</Text>
            {feedback.goodPoints.map((point, index) => (
              <View key={index} style={styles.pointCard}>
                <Text style={styles.pointAspect}>{point.aspect}</Text>
                <View style={styles.quoteContainer}>
                  <Text style={styles.quote}>"{point.quote}"</Text>
                </View>
                <Text style={styles.pointComment}>{point.comment}</Text>
              </View>
            ))}
          </View>

          {/* ÊîπÂñÑÁÇπ */}
          <View style={styles.section}>
            <Text style={styles.sectionTitle}>üí° ÊîπÂñÑ„ÅÆ„Éí„É≥„Éà</Text>
            {feedback.improvementPoints.map((point, index) => (
              <View key={index} style={styles.improvementCard}>
                <Text style={styles.pointAspect}>{point.aspect}</Text>
                
                <View style={styles.beforeAfter}>
                  <View style={styles.beforeContainer}>
                    <Text style={styles.beforeAfterLabel}>Before</Text>
                    <Text style={styles.beforeText}>"{point.original}"</Text>
                  </View>
                  
                  <View style={styles.arrow}>
                    <Text>‚Üí</Text>
                  </View>
                  
                  <View style={styles.afterContainer}>
                    <Text style={styles.beforeAfterLabel}>After</Text>
                    <Text style={styles.afterText}>"{point.improved}"</Text>
                  </View>
                </View>
                
                <Text style={styles.improvementReason}>{point.reason}</Text>
              </View>
            ))}
          </View>

          {/* Âä±„Åæ„Åó */}
          <View style={styles.encouragementCard}>
            <Text style={styles.encouragementIcon}>üåü</Text>
            <Text style={styles.encouragementText}>{feedback.encouragement}</Text>
          </View>
        </View>

        {/* „Ç¢„ÇØ„Ç∑„Éß„É≥„Éú„Çø„É≥ */}
        <View style={styles.actions}>
          {isGuest ? (
            <View style={styles.guestNotice}>
              <Text style={styles.guestNoticeText}>
                „É≠„Ç∞„Ç§„É≥„Åó„Å¶Â±•Ê≠¥„Çí‰øùÂ≠ò„Åó„Åæ„Åó„Çá„ÅÜ
              </Text>
              <TouchableOpacity 
                style={styles.primaryButton}
                onPress={handleSaveSession}
              >
                <Text style={styles.primaryButtonText}>„Ç¢„Ç´„Ç¶„É≥„Éà„Çí‰ΩúÊàê</Text>
              </TouchableOpacity>
            </View>
          ) : (
            <TouchableOpacity 
              style={styles.primaryButton}
              onPress={handleSaveSession}
            >
              <Text style={styles.primaryButtonText}>Â±•Ê≠¥„Å´‰øùÂ≠ò</Text>
            </TouchableOpacity>
          )}
          
          <TouchableOpacity 
            style={styles.secondaryButton}
            onPress={handleRetry}
          >
            <Text style={styles.secondaryButtonText}>Âà•„ÅÆÂ†¥Èù¢„ÇíÈÅ∏„Å∂</Text>
          </TouchableOpacity>
          
          <TouchableOpacity 
            style={styles.textButton}
            onPress={handleBackToHome}
          >
            <Text style={styles.textButtonText}>„Éõ„Éº„É†„Å∏Êàª„Çã</Text>
          </TouchableOpacity>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
}

// „Çπ„Çø„Ç§„É´„ÅØÂ§âÊõ¥„Å™„ÅóÔºàÁúÅÁï•Ôºâ
const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f5f5f5',
  },
  header: {
    backgroundColor: '#2196F3',
    padding: 24,
    alignItems: 'center',
  },
  headerTitle: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#fff',
    marginBottom: 16,
  },
  sceneIcon: {
    fontSize: 48,
    marginBottom: 8,
  },
  sceneName: {
    fontSize: 18,
    color: '#fff',
  },
  content: {
    padding: 16,
  },
  summaryCard: {
    backgroundColor: '#fff',
    borderRadius: 12,
    padding: 20,
    marginBottom: 20,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 3.84,
    elevation: 5,
  },
  summaryLabel: {
    fontSize: 14,
    color: '#666',
    marginBottom: 8,
    fontWeight: 'bold',
  },
  summaryText: {
    fontSize: 16,
    color: '#333',
    lineHeight: 24,
  },
  section: {
    marginBottom: 20,
  },
  sectionTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 12,
  },
  pointCard: {
    backgroundColor: '#fff',
    borderRadius: 12,
    padding: 16,
    marginBottom: 12,
    borderLeftWidth: 4,
    borderLeftColor: '#4CAF50',
  },
  improvementCard: {
    backgroundColor: '#fff',
    borderRadius: 12,
    padding: 16,
    marginBottom: 12,
    borderLeftWidth: 4,
    borderLeftColor: '#FFC107',
  },
  pointAspect: {
    fontSize: 14,
    fontWeight: 'bold',
    color: '#666',
    marginBottom: 8,
  },
  quoteContainer: {
    backgroundColor: '#f5f5f5',
    borderRadius: 8,
    padding: 12,
    marginBottom: 8,
  },
  quote: {
    fontSize: 14,
    color: '#333',
    fontStyle: 'italic',
  },
  pointComment: {
    fontSize: 14,
    color: '#666',
    lineHeight: 20,
  },
  beforeAfter: {
    marginVertical: 12,
  },
  beforeContainer: {
    backgroundColor: '#ffebee',
    borderRadius: 8,
    padding: 12,
    marginBottom: 8,
  },
  afterContainer: {
    backgroundColor: '#e8f5e9',
    borderRadius: 8,
    padding: 12,
  },
  beforeAfterLabel: {
    fontSize: 12,
    fontWeight: 'bold',
    color: '#666',
    marginBottom: 4,
  },
  beforeText: {
    fontSize: 14,
    color: '#d32f2f',
  },
  afterText: {
    fontSize: 14,
    color: '#388e3c',
  },
  arrow: {
    alignItems: 'center',
    marginVertical: 4,
  },
  improvementReason: {
    fontSize: 14,
    color: '#666',
    lineHeight: 20,
    marginTop: 8,
  },
  encouragementCard: {
    backgroundColor: '#fff3e0',
    borderRadius: 12,
    padding: 20,
    alignItems: 'center',
    marginBottom: 20,
  },
  encouragementIcon: {
    fontSize: 32,
    marginBottom: 12,
  },
  encouragementText: {
    fontSize: 16,
    color: '#333',
    textAlign: 'center',
    lineHeight: 24,
  },
  actions: {
    padding: 16,
  },
  guestNotice: {
    backgroundColor: '#fff3e0',
    borderRadius: 8,
    padding: 16,
    marginBottom: 12,
  },
  guestNoticeText: {
    fontSize: 14,
    color: '#f57c00',
    textAlign: 'center',
    marginBottom: 12,
  },
  primaryButton: {
    backgroundColor: '#2196F3',
    borderRadius: 8,
    padding: 16,
    alignItems: 'center',
    marginBottom: 12,
  },
  primaryButtonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: 'bold',
  },
  secondaryButton: {
    backgroundColor: '#fff',
    borderRadius: 8,
    padding: 16,
    alignItems: 'center',
    marginBottom: 12,
    borderWidth: 2,
    borderColor: '#2196F3',
  },
  secondaryButtonText: {
    color: '#2196F3',
    fontSize: 16,
    fontWeight: 'bold',
  },
  textButton: {
    padding: 16,
    alignItems: 'center',
  },
  textButtonText: {
    color: '#666',
    fontSize: 16,
  },
});